#!/bin/bash
# ATPP GUI version
 
# Hai Li
# hai.li@nlpr.ia.ac.cn

#---------------- initialization ----------------#

function gtk() { GTK=`gtk-server msg=$$,"$@"`; }
function define() { $2 "$3"; eval $1=$GTK; }
gtk-server -cfg=gtk-server-glade.cfg -ipc=$$ -detach
sleep 0.1
gtk "gtk_init NULL NULL"
gtk "glade_init"
define XML gtk "glade_xml_new ATPP.glade 0 0"
gtk "glade_xml_signal_autoconnect, $XML"
define window1 gtk "glade_xml_get_widget $XML window1"
gtk "gtk_server_connect $GTK delete-event window1"
gtk "gtk_widget_show $window1" 1

#------------------- widgets -------------------#

define window1 gtk "glade_xml_get_widget $XML window1"
define vbox1 gtk "glade_xml_get_widget $XML vbox1"
define image1 gtk "glade_xml_get_widget $XML image1"
define notebook gtk "glade_xml_get_widget $XML notebook"
define vbox2 gtk "glade_xml_get_widget $XML vbox2"
define hbox4 gtk "glade_xml_get_widget $XML hbox4"
define image4 gtk "glade_xml_get_widget $XML image4"
define pl_dir gtk "glade_xml_get_widget $XML pl_dir"
define hbox1 gtk "glade_xml_get_widget $XML hbox1"
define dir_pl gtk "glade_xml_get_widget $XML dir_pl"
define button_dir_pl gtk "glade_xml_get_widget $XML button_dir_pl"
gtk "gtk_server_connect $GTK file_set button_dir_pl_file_set"
define hbox5 gtk "glade_xml_get_widget $XML hbox5"
define image5 gtk "glade_xml_get_widget $XML image5"
define work_dir gtk "glade_xml_get_widget $XML work_dir"
define hbox2 gtk "glade_xml_get_widget $XML hbox2"
define dir_work gtk "glade_xml_get_widget $XML dir_work"
define button_dir_work gtk "glade_xml_get_widget $XML button_dir_work"
gtk "gtk_server_connect $GTK file_set button_dir_work_file_set"
define hbox3 gtk "glade_xml_get_widget $XML hbox3"
define image6 gtk "glade_xml_get_widget $XML image6"
define data_dir gtk "glade_xml_get_widget $XML data_dir"
define hbox7 gtk "glade_xml_get_widget $XML hbox7"
define dir_data gtk "glade_xml_get_widget $XML dir_data"
define button_dir_data gtk "glade_xml_get_widget $XML button_dir_data"
gtk "gtk_server_connect $GTK file_set button_dir_data_file_set"
define hbox13 gtk "glade_xml_get_widget $XML hbox13"
define image8 gtk "glade_xml_get_widget $XML image8"
define sub_file gtk "glade_xml_get_widget $XML sub_file"
define hbox14 gtk "glade_xml_get_widget $XML hbox14"
define file_sub gtk "glade_xml_get_widget $XML file_sub"
define button_file_sub gtk "glade_xml_get_widget $XML button_file_sub"
gtk "gtk_server_connect $GTK file_set button_file_sub_file_set"
define hseparator1 gtk "glade_xml_get_widget $XML hseparator1"
define hbox15 gtk "glade_xml_get_widget $XML hbox15"
define ROI gtk "glade_xml_get_widget $XML ROI"
define name_ROI gtk "glade_xml_get_widget $XML name_ROI"
define max_cl gtk "glade_xml_get_widget $XML max_cl"
define spin_max_cl gtk "glade_xml_get_widget $XML spin_max_cl"
define hseparator4 gtk "glade_xml_get_widget $XML hseparator4"
define viewport5 gtk "glade_xml_get_widget $XML viewport5"
define vbox11 gtk "glade_xml_get_widget $XML vbox11"
define hbox9 gtk "glade_xml_get_widget $XML hbox9"
define label5 gtk "glade_xml_get_widget $XML label5"
define left gtk "glade_xml_get_widget $XML left"
gtk "gtk_server_connect $GTK toggled left_toggled"
define right gtk "glade_xml_get_widget $XML right"
gtk "gtk_server_connect $GTK toggled right_toggled"
define hseparator3 gtk "glade_xml_get_widget $XML hseparator3"
define hbox6 gtk "glade_xml_get_widget $XML hbox6"
define vbox3 gtk "glade_xml_get_widget $XML vbox3"
define steps gtk "glade_xml_get_widget $XML steps"
define hseparator8 gtk "glade_xml_get_widget $XML hseparator8"
define hbox11 gtk "glade_xml_get_widget $XML hbox11"
define step0 gtk "glade_xml_get_widget $XML step0"
gtk "gtk_server_connect $GTK toggled step0_toggled"
define button_edit gtk "glade_xml_get_widget $XML button_edit"
gtk "gtk_server_connect $GTK clicked button_edit_clicked"
define hseparator5 gtk "glade_xml_get_widget $XML hseparator5"
define step1 gtk "glade_xml_get_widget $XML step1"
gtk "gtk_server_connect $GTK toggled step1_toggled"
define step2 gtk "glade_xml_get_widget $XML step2"
gtk "gtk_server_connect $GTK toggled step2_toggled"
define step3 gtk "glade_xml_get_widget $XML step3"
gtk "gtk_server_connect $GTK toggled step3_toggled"
define step4 gtk "glade_xml_get_widget $XML step4"
gtk "gtk_server_connect $GTK toggled step4_toggled"
define step5 gtk "glade_xml_get_widget $XML step5"
gtk "gtk_server_connect $GTK toggled step5_toggled"
define vbox4 gtk "glade_xml_get_widget $XML vbox4"
define step6 gtk "glade_xml_get_widget $XML step6"
gtk "gtk_server_connect $GTK toggled step6_toggled"
define step7 gtk "glade_xml_get_widget $XML step7"
gtk "gtk_server_connect $GTK toggled step7_toggled"
define step8 gtk "glade_xml_get_widget $XML step8"
gtk "gtk_server_connect $GTK toggled step8_toggled"
define step9 gtk "glade_xml_get_widget $XML step9"
gtk "gtk_server_connect $GTK toggled step9_toggled"
define step10 gtk "glade_xml_get_widget $XML step10"
gtk "gtk_server_connect $GTK toggled step10_toggled"
define step11 gtk "glade_xml_get_widget $XML step11"
gtk "gtk_server_connect $GTK toggled step11_toggled"
define step12 gtk "glade_xml_get_widget $XML step12"
gtk "gtk_server_connect $GTK toggled step12_toggled"
define viewport2 gtk "glade_xml_get_widget $XML viewport2"
define vbox8 gtk "glade_xml_get_widget $XML vbox8"
define label4 gtk "glade_xml_get_widget $XML label4"
define hseparator7 gtk "glade_xml_get_widget $XML hseparator7"
define vbox9 gtk "glade_xml_get_widget $XML vbox9"
define label6 gtk "glade_xml_get_widget $XML label6"
define split_half gtk "glade_xml_get_widget $XML split_half"
gtk "gtk_server_connect $GTK toggled split_half_toggled"
define pairwise gtk "glade_xml_get_widget $XML pairwise"
gtk "gtk_server_connect $GTK toggled pairwise_toggled"
define leave_one_out gtk "glade_xml_get_widget $XML leave_one_out"
gtk "gtk_server_connect $GTK toggled leave_one_out_toggled"
define hseparator9 gtk "glade_xml_get_widget $XML hseparator9"
define hbox12 gtk "glade_xml_get_widget $XML hbox12"
define hi_vi gtk "glade_xml_get_widget $XML hi_vi"
gtk "gtk_server_connect $GTK toggled hi_vi_toggled"
define tpd gtk "glade_xml_get_widget $XML tpd"
gtk "gtk_server_connect $GTK toggled tpd_toggled"
define hseparator10 gtk "glade_xml_get_widget $XML hseparator10"
define hbox16 gtk "glade_xml_get_widget $XML hbox16"
define cont gtk "glade_xml_get_widget $XML cont"
gtk "gtk_server_connect $GTK toggled cont_toggled"
define silhouette gtk "glade_xml_get_widget $XML silhouette"
gtk "gtk_server_connect $GTK toggled silhouette_toggled"
define hbox24 gtk "glade_xml_get_widget $XML hbox24"
define poolsize gtk "glade_xml_get_widget $XML poolsize"
define spin_poolsize gtk "glade_xml_get_widget $XML spin_poolsize"
define vseparator1 gtk "glade_xml_get_widget $XML vseparator1"
define GE gtk "glade_xml_get_widget $XML GE"
gtk "gtk_server_connect $GTK toggled GE_toggled"
define label1 gtk "glade_xml_get_widget $XML label1"
define scrolledwindow1 gtk "glade_xml_get_widget $XML scrolledwindow1"
define viewport1 gtk "glade_xml_get_widget $XML viewport1"
define vbox5 gtk "glade_xml_get_widget $XML vbox5"
define hbox23 gtk "glade_xml_get_widget $XML hbox23"
define image7 gtk "glade_xml_get_widget $XML image7"
define matlab_exe gtk "glade_xml_get_widget $XML matlab_exe"
define hbox38 gtk "glade_xml_get_widget $XML hbox38"
define exe_matlab gtk "glade_xml_get_widget $XML exe_matlab"
define button_exe_matlab gtk "glade_xml_get_widget $XML button_exe_matlab"
gtk "gtk_server_connect $GTK file_set button_exe_matlab_file_set"
define hbox17 gtk "glade_xml_get_widget $XML hbox17"
define image2 gtk "glade_xml_get_widget $XML image2"
define spm_dir gtk "glade_xml_get_widget $XML spm_dir"
define hbox18 gtk "glade_xml_get_widget $XML hbox18"
define dir_spm gtk "glade_xml_get_widget $XML dir_spm"
define button_dir_spm gtk "glade_xml_get_widget $XML button_dir_spm"
gtk "gtk_server_connect $GTK file_set button_dir_spm_file_set"
define hbox19 gtk "glade_xml_get_widget $XML hbox19"
define image9 gtk "glade_xml_get_widget $XML image9"
define nifti_dir gtk "glade_xml_get_widget $XML nifti_dir"
define hbox20 gtk "glade_xml_get_widget $XML hbox20"
define dir_nifti gtk "glade_xml_get_widget $XML dir_nifti"
define button_dir_nifti gtk "glade_xml_get_widget $XML button_dir_nifti"
gtk "gtk_server_connect $GTK file_set button_dir_nifti_file_set"
define hbox39 gtk "glade_xml_get_widget $XML hbox39"
define image13 gtk "glade_xml_get_widget $XML image13"
define qsub_exe gtk "glade_xml_get_widget $XML qsub_exe"
define hbox40 gtk "glade_xml_get_widget $XML hbox40"
define exe_qsub gtk "glade_xml_get_widget $XML exe_qsub"
define button_exe_qsub gtk "glade_xml_get_widget $XML button_exe_qsub"
gtk "gtk_server_connect $GTK file_set button_exe_qsub_file_set"
define hbox41 gtk "glade_xml_get_widget $XML hbox41"
define image14 gtk "glade_xml_get_widget $XML image14"
define fsl_sub_exe gtk "glade_xml_get_widget $XML fsl_sub_exe"
define hbox42 gtk "glade_xml_get_widget $XML hbox42"
define exe_fsl_sub gtk "glade_xml_get_widget $XML exe_fsl_sub"
define button_exe_fsl_sub gtk "glade_xml_get_widget $XML button_exe_fsl_sub"
gtk "gtk_server_connect $GTK file_set button_exe_fsl_sub_file_set"
define hbox43 gtk "glade_xml_get_widget $XML hbox43"
define image15 gtk "glade_xml_get_widget $XML image15"
define probtrackx_exe gtk "glade_xml_get_widget $XML probtrackx_exe"
define hbox44 gtk "glade_xml_get_widget $XML hbox44"
define exe_probtrackx gtk "glade_xml_get_widget $XML exe_probtrackx"
define button_exe_probtrackx gtk "glade_xml_get_widget $XML button_exe_probtrackx"
gtk "gtk_server_connect $GTK file_set button_exe_probtrackx_file_set"
define hbox21 gtk "glade_xml_get_widget $XML hbox21"
define image10 gtk "glade_xml_get_widget $XML image10"
define temp_file gtk "glade_xml_get_widget $XML temp_file"
define hbox22 gtk "glade_xml_get_widget $XML hbox22"
define file_temp gtk "glade_xml_get_widget $XML file_temp"
define button_file_temp gtk "glade_xml_get_widget $XML button_file_temp"
gtk "gtk_server_connect $GTK file_set button_file_temp_file_set"
define hseparator6 gtk "glade_xml_get_widget $XML hseparator6"
define hbox25 gtk "glade_xml_get_widget $XML hbox25"
define vbox6 gtk "glade_xml_get_widget $XML vbox6"
define hbox26 gtk "glade_xml_get_widget $XML hbox26"
define n_samples gtk "glade_xml_get_widget $XML n_samples"
define name_n_samples gtk "glade_xml_get_widget $XML name_n_samples"
define hbox27 gtk "glade_xml_get_widget $XML hbox27"
define dis_cor gtk "glade_xml_get_widget $XML dis_cor"
define name_dis_cor gtk "glade_xml_get_widget $XML name_dis_cor"
define hbox28 gtk "glade_xml_get_widget $XML hbox28"
define len_step gtk "glade_xml_get_widget $XML len_step"
define name_len_step gtk "glade_xml_get_widget $XML name_len_step"
define hbox29 gtk "glade_xml_get_widget $XML hbox29"
define n_steps gtk "glade_xml_get_widget $XML n_steps"
define name_n_steps gtk "glade_xml_get_widget $XML name_n_steps"
define hbox30 gtk "glade_xml_get_widget $XML hbox30"
define cur_thres gtk "glade_xml_get_widget $XML cur_thres"
define name_cur_thres gtk "glade_xml_get_widget $XML name_cur_thres"
define hbox31 gtk "glade_xml_get_widget $XML hbox31"
define val_thres gtk "glade_xml_get_widget $XML val_thres"
define name_val_thres gtk "glade_xml_get_widget $XML name_val_thres"
define hbox32 gtk "glade_xml_get_widget $XML hbox32"
define nsamples2 gtk "glade_xml_get_widget $XML nsamples2"
define name_down_size gtk "glade_xml_get_widget $XML name_down_size"
define hbox33 gtk "glade_xml_get_widget $XML hbox33"
define method gtk "glade_xml_get_widget $XML method"
define name_method gtk "glade_xml_get_widget $XML name_method"
define hbox34 gtk "glade_xml_get_widget $XML hbox34"
define vox_size gtk "glade_xml_get_widget $XML vox_size"
define name_vox_size gtk "glade_xml_get_widget $XML name_vox_size"
define hbox35 gtk "glade_xml_get_widget $XML hbox35"
define group_thres gtk "glade_xml_get_widget $XML group_thres"
define name_group_thres gtk "glade_xml_get_widget $XML name_group_thres"
define hbox36 gtk "glade_xml_get_widget $XML hbox36"
define mpm_thres gtk "glade_xml_get_widget $XML mpm_thres"
define name_mpm_thres gtk "glade_xml_get_widget $XML name_mpm_thres"
define hbox37 gtk "glade_xml_get_widget $XML hbox37"
define n_iter gtk "glade_xml_get_widget $XML n_iter"
define name_n_iter gtk "glade_xml_get_widget $XML name_n_iter"
define label2 gtk "glade_xml_get_widget $XML label2"
define vbox7 gtk "glade_xml_get_widget $XML vbox7"
define image3 gtk "glade_xml_get_widget $XML image3"
define image11 gtk "glade_xml_get_widget $XML image11"
define image12 gtk "glade_xml_get_widget $XML image12"
define textview1 gtk "glade_xml_get_widget $XML textview1"
define label3 gtk "glade_xml_get_widget $XML label3"
define hseparator2 gtk "glade_xml_get_widget $XML hseparator2"
define hbox8 gtk "glade_xml_get_widget $XML hbox8"
define button_run gtk "glade_xml_get_widget $XML button_run"
gtk "gtk_server_connect $GTK clicked button_run_clicked"
define button_stop gtk "glade_xml_get_widget $XML button_stop"
gtk "gtk_server_connect $GTK clicked button_stop_clicked"
define hbox10 gtk "glade_xml_get_widget $XML hbox10"
define button_progress gtk "glade_xml_get_widget $XML button_progress"
gtk "gtk_server_connect $GTK clicked button_progress_clicked"
define statusbar gtk "glade_xml_get_widget $XML statusbar"
define button_log gtk "glade_xml_get_widget $XML button_log"
gtk "gtk_server_connect $GTK clicked button_log_clicked"

#-------------- default parameters --------------#

PIPELINE=$(pwd)
WD=''
DATA_DIR=''
SUB_LIST=''
ROI=''
MAX_CL_NUM=2
POOLSIZE=7
stopid=''
logfile=''

switch=()
LH=0
RH=0
GE=0
split_half=0
pairwise=0
leave_one_out=0
hi_vi=0
tpd=0
cont=0
silhouette=0

gtk "gtk_entry_set_text ${exe_matlab} \"$(command -v matlab)\""
gtk "gtk_entry_set_text ${exe_qsub} \"$(command -v qsub)\""
gtk "gtk_entry_set_text ${exe_fsl_sub} \"$(command -v fsl_sub)\""
gtk "gtk_entry_set_text ${exe_probtrackx} \"$(command -v probtrackx)\""
gtk "gtk_entry_set_text ${dir_pl} \"$(pwd)\""
gtk "gtk_entry_set_text ${dir_spm} \"/DATA/233/hli/toolbox/spm8\""
gtk "gtk_entry_set_text ${dir_nifti} \"$(pwd)/NIfTI_20130306\""
gtk "gtk_entry_set_text ${file_temp} \"$(pwd)/MNI152_T1_1mm_brain.nii\""
gtk "gtk_entry_set_text ${name_n_samples} \"5000\""
gtk "gtk_entry_set_text ${name_dis_cor} \"1\""
gtk "gtk_entry_set_text ${name_len_step} \"0.5\""
gtk "gtk_entry_set_text ${name_n_steps} \"2000\""
gtk "gtk_entry_set_text ${name_cur_thres} \"0.2\""
gtk "gtk_entry_set_text ${name_val_thres} \"10\""
gtk "gtk_entry_set_text ${name_down_size} \"5\""
gtk "gtk_entry_set_text ${name_method} \"sc\""
gtk "gtk_entry_set_text ${name_vox_size} \"1\""
gtk "gtk_entry_set_text ${name_group_thres} \"0.25\""
gtk "gtk_entry_set_text ${name_mpm_thres} \"0.25\""
gtk "gtk_entry_set_text ${name_n_iter} \"100\""

define status_ready gtk "gtk_statusbar_get_context_id ${statusbar} \"ready\""
gtk "gtk_statusbar_push ${statusbar} ${status_ready} \"Ready\""

#--------------- Callback functions ---------------#

function on_button_dir_pl_file_set()
{
	define dir_pl_entry gtk "gtk_file_chooser_get_uri ${button_dir_pl}"
	gtk "gtk_entry_set_text ${dir_pl} \"${dir_pl_entry##file://}\""
}

function on_button_dir_data_file_set()
{
	define dir_data_entry gtk "gtk_file_chooser_get_uri ${button_dir_data}"
	gtk "gtk_entry_set_text ${dir_data} \"${dir_data_entry##file://}\""
}

function on_button_dir_work_file_set()
{
	define dir_work_entry gtk "gtk_file_chooser_get_uri ${button_dir_work}"
	gtk "gtk_entry_set_text ${dir_work} \"${dir_work_entry##file://}\""
}

function on_button_file_sub_file_set()
{
	define file_sub_entry gtk "gtk_file_chooser_get_filename ${button_file_sub}"
	gtk "gtk_entry_set_text ${file_sub} \"${file_sub_entry}\""
}

function on_button_dir_spm_file_set()
{
	define dir_spm_entry gtk "gtk_file_chooser_get_uri ${button_dir_spm}"
	gtk "gtk_entry_set_text ${dir_spm} \"${dir_spm_entry##file://}\""
}

function on_button_dir_nifti_file_set()
{
	define dir_nifti_entry gtk "gtk_file_chooser_get_uri ${button_dir_nifti}"
	gtk "gtk_entry_set_text ${dir_nifti} \"${dir_nifti_entry##file://}\""
}

function on_button_file_temp_file_set()
{
	define file_temp_entry gtk "gtk_file_chooser_get_filename ${button_file_temp}"
	gtk "gtk_entry_set_text ${file_temp} \"${file_temp_entry}\""
}

function on_button_exe_matlab_file_set()
{
	define exe_matlab_entry gtk "gtk_file_chooser_get_filename ${button_exe_matlab}"
	gtk "gtk_entry_set_text ${exe_matlab} \"${exe_matlab_entry}\""
}

function on_button_exe_qsub_file_set()
{
	define exe_qsub_entry gtk "gtk_file_chooser_get_filename ${button_exe_qsub}"
	gtk "gtk_entry_set_text ${exe_qsub} \"${exe_qsub_entry}\""
}

function on_button_exe_fsl_sub_file_set()
{
	define exe_fsl_sub_entry gtk "gtk_file_chooser_get_filename ${button_exe_fsl_sub}"
	gtk "gtk_entry_set_text ${exe_fsl_sub} \"${exe_fsl_sub_entry}\""
}

function on_button_exe_probtrackx_file_set()
{
	define exe_probtrackx_entry gtk "gtk_file_chooser_get_filename ${button_exe_probtrackx}"
	gtk "gtk_entry_set_text ${exe_probtrackx} \"${exe_probtrackx_entry}\""
}


function on_GE_toggled()
{
	if [[ ${GE} = 0 ]]
	then
		GE=1
	else 
		GE=0
	fi
}

function on_left_toggled()
{
	if [[ ${LH} = 0 ]]
	then
		LH=1
	else 
		LH=0
	fi
}

function on_right_toggled()
{
	if [[ ${RH} = 0 ]]
	then
		RH=1
	else 
		RH=0
	fi
}

function on_step0_toggled()
{
	if [[ ${switch[@]/%s0/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s0/})
	else
	 	switch+=(s0)
	fi
}

function on_step1_toggled()
{
	if [[ ${switch[@]/%s1/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s1/})
	else
	 	switch+=(s1)
	fi
}

function on_step2_toggled()
{
	if [[ ${switch[@]/%s2/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s2/})
	else
	 	switch+=(s2)
	fi
}

function on_step3_toggled()
{
	if [[ ${switch[@]/%s3/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s3/})
	else
	 	switch+=(s3)
	fi
}

function on_step4_toggled()
{
	if [[ ${switch[@]/%s4/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s4/})
	else
	 	switch+=(s4)
	fi
}

function on_step5_toggled()
{
	if [[ ${switch[@]/%s5/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s5/})
	else
	 	switch+=(s5)
	fi
}

function on_step6_toggled()
{
	if [[ ${switch[@]/%s6/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s6/})
	else
	 	switch+=(s6)
	fi
}

function on_step7_toggled()
{
	if [[ ${switch[@]/%s7/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s7/})
	else
	 	switch+=(s7)
	fi
}

function on_step8_toggled()
{
	if [[ ${switch[@]/%s8/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s8/})
	else
	 	switch+=(s8)
	fi
}

function on_step9_toggled()
{
	if [[ ${switch[@]/%s9/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s9/})
	else
	 	switch+=(s9)
	fi
}

function on_step10_toggled()
{
	if [[ ${switch[@]/%s10/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s10/})
	else
	 	switch+=(s10)
	fi
}

function on_step11_toggled()
{
	if [[ ${switch[@]/%s11/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s11/})
	else
	 	switch+=(s11)
	fi
}

function on_step12_toggled()
{
	if [[ ${switch[@]/%s12/} != ${switch[@]} ]]
	then
		switch=(${switch[@]/%s12/})
	else
	 	switch+=(s12)
	fi
}

function on_split_half_toggled()
{
	if [[ ${split_half} = 0 ]]
	then
		split_half=1
	else 
		split_half=0
	fi
}

function on_pairwise_toggled()
{
	if [[ ${pairwise} = 0 ]]
	then
		pairwise=1
	else 
		pairwise=0
	fi
}

function on_leave_one_out_toggled()
{
	if [[ ${leave_one_out} = 0 ]]
	then
		leave_one_out=1
	else 
		leave_one_out=0
	fi
}

function on_hi_vi_toggled()
{
	if [[ ${hi_vi} = 0 ]]
	then
		hi_vi=1
	else 
		hi_vi=0
	fi
}

function on_tpd_toggled()
{
	if [[ ${tpd} = 0 ]]
	then
		tpd=1
	else 
		tpd=0
	fi
}

function on_silhouette_toggled()
{
	if [[ ${silhouette} = 0 ]]
	then
		silhouette=1
	else 
		silhouette=0
	fi
}

function on_cont_toggled()
{
	if [[ ${cont} = 0 ]]
	then
		cont=1
	else 
		cont=0
	fi
}


function on_button_run_clicked()
{	
	config_file=$(pwd)/log/config_$(date +%m-%d_%H-%M-%S).sh
	touch ${config_file}
	
	define res_dir_pl gtk "gtk_entry_get_text ${dir_pl}"
	echo "PIPELINE=${res_dir_pl}" >> ${config_file}
	PIPELINE=${res_dir_pl}

	define res_dir_work gtk "gtk_entry_get_text ${dir_work}"
	echo "WD=${res_dir_work}" >> ${config_file}
	WD=${res_dir_work}

	define res_dir_data gtk "gtk_entry_get_text ${dir_data}"
	echo "DATA_DIR=${res_dir_data}" >> ${config_file}

	define res_file_sub gtk "gtk_entry_get_text ${file_sub}"
	echo "SUB_LIST=${res_file_sub}" >> ${config_file}

	define res_ROI gtk "gtk_entry_get_text ${name_ROI}"
	echo "ROI=${res_ROI}" >> ${config_file}
	ROI=${res_ROI}

	define res_max_cl gtk "gtk_spin_button_get_value_as_int ${spin_max_cl}"
	echo "MAX_CL_NUM=${res_max_cl}" >> ${config_file}

	define res_dir_spm gtk "gtk_entry_get_text ${dir_spm}"
	echo "SPM=${res_dir_spm}" >> ${config_file}

	define res_dir_nifti gtk "gtk_entry_get_text ${dir_nifti}"
	echo "NIFTI=${res_dir_nifti}" >> ${config_file}

	define res_file_temp gtk "gtk_entry_get_text ${file_temp}"
	echo "TEMPLATE=${res_file_temp}" >> ${config_file}

	define res_exe_matlab gtk "gtk_entry_get_text ${exe_matlab}"
	echo "COMMAND_MATLAB=${res_exe_matlab}" >> ${config_file}

	define res_exe_qsub gtk "gtk_entry_get_text ${exe_qsub}"
	echo "COMMAND_QSUB=${res_exe_qsub}" >> ${config_file}

	define res_exe_fsl_sub gtk "gtk_entry_get_text ${exe_fsl_sub}"
	echo "COMMAND_FSLSUB=${res_exe_fsl_sub}" >> ${config_file}

	define res_exe_probtrackx gtk "gtk_entry_get_text ${exe_probtrackx}"
	echo "COMMAND_PROBTRACKX=${res_exe_probtrackx}" >> ${config_file}

	define res_poolsize gtk "gtk_spin_button_get_value_as_int ${spin_poolsize}"
	echo "POOLSIZE=${res_poolsize}" >> ${config_file}

	echo "GE=${GE}" >> ${config_file}

	echo "LEFT=${LH}" >> ${config_file}
	echo "RIGHT=${RH}" >> ${config_file}

	echo "split_half=${split_half}" >> ${config_file}
	echo "pairwise=${pairwise}" >> ${config_file}
	echo "leave_one_out=${leave_one_out}" >> ${config_file}
	echo "hi_vi=${hi_vi}" >> ${config_file}
	echo "tpd=${tpd}" >> ${config_file}
	echo "cont=${cont}" >> ${config_file}
	echo "silhouette=${silhouette}" >> ${config_file}
	
	echo "SWITCH=(${switch[@]})" >> ${config_file}

	define res_n_samples gtk "gtk_entry_get_text ${name_n_samples}"
	echo "N_SAMPLES=${res_n_samples}" >> ${config_file}

	define res_dis_cor gtk "gtk_entry_get_text ${name_dis_cor}"
	echo "DIS_COR=${res_dis_cor}" >> ${config_file}

	define res_len_step gtk "gtk_entry_get_text ${name_len_step}"
	echo "LEN_STEP=${res_len_step}" >> ${config_file}

	define res_n_steps gtk "gtk_entry_get_text ${name_n_steps}"
	echo "N_STEPS=${res_n_steps}" >> ${config_file}

	define res_cur_thres gtk "gtk_entry_get_text ${name_cur_thres}"
	echo "CUR_THRES=${res_cur_thres}" >> ${config_file}

	define res_val_thres gtk "gtk_entry_get_text ${name_val_thres}"
	echo "VAL_THRES=${res_val_thres}" >> ${config_file}
	
	define res_down_size gtk "gtk_entry_get_text ${name_down_size}"
	echo "DOWN_SIZE=${res_down_size}" >> ${config_file}
	
	define res_method gtk "gtk_entry_get_text ${name_method}"
	echo "METHOD=${res_method}" >> ${config_file}

	define res_vox_size gtk "gtk_entry_get_text ${name_vox_size}"
	echo "VOX_SIZE=${res_vox_size}" >> ${config_file}

	define res_group_thres gtk "gtk_entry_get_text ${name_group_thres}"
	echo "GROUP_THRES=${res_group_thres}" >> ${config_file}
	
	define res_mpm_thres gtk "gtk_entry_get_text ${name_mpm_thres}"
	echo "MPM_THRES=${res_mpm_thres}" >> ${config_file}

	define res_n_iter gtk "gtk_entry_get_text ${name_n_iter}"
	echo "N_ITER=${res_n_iter}" >> ${config_file}

	runrun=$(bash ${PIPELINE}/ATPP.sh ${config_file})
	stopid=$(echo ${runrun}|awk '{print $1}')
	echo "stopid=${stopid}" >> ${config_file}
	logfile=$(echo ${runrun}|awk '{print $2}')
	echo "logfile=${logfile}" >> ${config_file}

	define status_run gtk "gtk_statusbar_get_context_id ${statusbar} \"run\""
	gtk "gtk_statusbar_push ${statusbar} ${status_run} \"Running...\""
	
}

function on_button_edit_clicked()
{
	gedit $(pwd)/0_gen_WD.sh
}

function getcpid() {
    cpids=`pgrep -P $1|xargs`
    for cpid in $cpids;
    do
        echo "$cpid"
        getcpid $cpid
    done
}

function on_button_stop_clicked()
{
	source ${config_file}
	if [ "${GE}" = "1" ]; then
		qdel ${stopid}
	else
		kill $(getcpid ${stopid})
	fi
	define status_stop gtk "gtk_statusbar_get_context_id ${statusbar} \"stop\""
	gtk "gtk_statusbar_push ${statusbar} ${status_stop} \"Stop!\""
}


function on_button_log_clicked()
{
	source ${config_file}
	gedit ${logfile}
}

function on_button_progress_clicked()
{
	source ${config_file}
	gedit ${WD}/log/progress_check.txt
}

function check_running()
{
    if [ "${stopid}" != "" ];then

        define status_done gtk "gtk_statusbar_get_context_id ${statusbar} \"done\""

        if [ "${GE}" = "1" ]; then
	        if [ "$(qstat|grep ${stopid})" = "" ]; then
                gtk "gtk_statusbar_push ${statusbar} ${status_done} \"Done!\""
            fi
        else
	        s=$(ps -p ${stopid} -o s=)
            if [ "$s" = "" -o "$s" = "Z" ]; then	            
	            gtk "gtk_statusbar_push ${statusbar} ${status_done} \"Done!\""
            fi           
        fi 
    fi
}

#-------------------- events --------------------#

E=0
until [[ "$E" -eq "window1" ]];do
	define E gtk "gtk_server_callback update"
    [[ "$E" = "0" ]] && check_running
	[[ "$E" = "button_dir_pl_file_set" ]] && on_button_dir_pl_file_set
	[[ "$E" = "button_dir_work_file_set" ]] && on_button_dir_work_file_set
	[[ "$E" = "button_dir_data_file_set" ]] && on_button_dir_data_file_set
	[[ "$E" = "button_file_sub_file_set" ]] && on_button_file_sub_file_set
	[[ "$E" = "left_toggled" ]] && on_left_toggled
	[[ "$E" = "right_toggled" ]] && on_right_toggled
	[[ "$E" = "step0_toggled" ]] && on_step0_toggled
	[[ "$E" = "button_edit_clicked" ]] && on_button_edit_clicked
	[[ "$E" = "step1_toggled" ]] && on_step1_toggled
	[[ "$E" = "step2_toggled" ]] && on_step2_toggled
	[[ "$E" = "step3_toggled" ]] && on_step3_toggled
	[[ "$E" = "step4_toggled" ]] && on_step4_toggled
	[[ "$E" = "step5_toggled" ]] && on_step5_toggled
	[[ "$E" = "step6_toggled" ]] && on_step6_toggled
	[[ "$E" = "step7_toggled" ]] && on_step7_toggled
	[[ "$E" = "step8_toggled" ]] && on_step8_toggled
	[[ "$E" = "step9_toggled" ]] && on_step9_toggled
	[[ "$E" = "step10_toggled" ]] && on_step10_toggled
	[[ "$E" = "step11_toggled" ]] && on_step11_toggled
	[[ "$E" = "step12_toggled" ]] && on_step12_toggled
	[[ "$E" = "split_half_toggled" ]] && on_split_half_toggled
	[[ "$E" = "pairwise_toggled" ]] && on_pairwise_toggled
	[[ "$E" = "leave_one_out_toggled" ]] && on_leave_one_out_toggled
	[[ "$E" = "hi_vi_toggled" ]] && on_hi_vi_toggled
	[[ "$E" = "tpd_toggled" ]] && on_tpd_toggled
	[[ "$E" = "cont_toggled" ]] && on_cont_toggled
	[[ "$E" = "silhouette_toggled" ]] && on_silhouette_toggled
	[[ "$E" = "GE_toggled" ]] && on_GE_toggled
	[[ "$E" = "button_exe_matlab_file_set" ]] && on_button_exe_matlab_file_set
	[[ "$E" = "button_dir_spm_file_set" ]] && on_button_dir_spm_file_set
	[[ "$E" = "button_dir_nifti_file_set" ]] && on_button_dir_nifti_file_set
	[[ "$E" = "button_exe_qsub_file_set" ]] && on_button_exe_qsub_file_set
	[[ "$E" = "button_exe_fsl_sub_file_set" ]] && on_button_exe_fsl_sub_file_set
	[[ "$E" = "button_exe_probtrackx_file_set" ]] && on_button_exe_probtrackx_file_set
	[[ "$E" = "button_file_temp_file_set" ]] && on_button_file_temp_file_set
	[[ "$E" = "button_run_clicked" ]] && on_button_run_clicked
	[[ "$E" = "button_stop_clicked" ]] && on_button_stop_clicked
	[[ "$E" = "button_progress_clicked" ]] && on_button_progress_clicked
	[[ "$E" = "button_log_clicked" ]] && on_button_log_clicked   
done


#---------------------- Exit -------------------#

if [ "${GE}" = "1" ]; then
	qdel ${stopid}
else
	kill $(getcpid ${stopid})
fi

gtk "gtk_server_exit"
exit 0
